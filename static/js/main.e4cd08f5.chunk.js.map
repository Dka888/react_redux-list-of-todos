{"version":3,"sources":["types/Filters.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filters","actions","todo","type","payload","currentTodoReducer","state","action","SET_QUERY","SET_FILTER","query","filter","initialState","All","filterReducer","SET_TODOS","todosReducer","rootReducer","combineReducers","currentTodo","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","id","title","completed","onClick","handleClickModal","TodoFilter","onSubmit","event","preventDefault","onChange","value","Completed","Active","Error","handleChangeFilter","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","response","finally","href","email","name","App","filters","setTodos","filteredTodos","useMemo","newTodos","trimedQuery","trim","includes","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4cd08f5.chunk.js","sourcesContent":["export enum Filters {\n  All = 'All',\n  Completed = 'Completed',\n  Active = 'Active',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => {\n  return ({\n    type: 'currentTodo/SET',\n    payload: todo,\n  });\n};\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Filters } from '../types/Filters';\n\nconst SET_QUERY = 'Todos/SET_QUERY';\nconst SET_FILTER = 'Todos/SET_FILTER';\n\ntype TodoQuery = {\n  type: typeof SET_QUERY;\n  payload: string,\n};\n\ntype TodoFilter = {\n  type: typeof SET_FILTER;\n  payload: Filters\n};\n\nconst setQuery = (query: string): TodoQuery => ({\n  type: SET_QUERY,\n  payload: query,\n});\n\nconst setFilter = (filter: Filters): TodoFilter => ({\n  type: SET_FILTER,\n  payload: filter,\n});\n\nexport const actions = { setQuery, setFilter };\n\ntype Action = TodoQuery | TodoFilter;\n\ninterface FilterState {\n  query: string;\n  filter: Filters;\n}\n\nconst initialState: FilterState = {\n  query: '',\n  filter: Filters.All,\n\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nexport const SET_TODOS = 'todos/SET_TODOS';\n\ntype SetTodoAction = {\n  type: typeof SET_TODOS;\n  payload: Todo[];\n};\n\nexport const setTodos = (todos: Todo[]): SetTodoAction => ({\n  type: SET_TODOS,\n  payload: todos,\n});\n\nconst initialState: Todo[] = [];\n\nconst todosReducer = (state = initialState, action: SetTodoAction): Todo[] => {\n  switch (action.type) {\n    case SET_TODOS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ninterface TodoListInterface {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<TodoListInterface> = ({ todos }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const handleClickModal = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {todos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => {\n                const { id, title, completed } = todo;\n\n                return (\n                  <tr data-cy=\"todo\" key={id} className={currentTodo?.id === todo.id ? 'has-background-info-light' : ''}>\n                    <td className=\"is-vcentered\">\n                      {id}\n                    </td>\n                    <td className=\"is-vcentered\">\n                      {completed\n                        && <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>}\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={completed ? 'has-text-success' : 'has-text-danger'}>{title}</p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button data-cy=\"selectButton\" className=\"button\" type=\"button\" onClick={() => handleClickModal(todo)}>\n                        <span className=\"icon\">\n                          <i className={currentTodo?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'} />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { Filters } from '../../types/Filters';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filters = useAppSelector(state => state.filter);\n  const { query } = filters;\n\n  const handleChangeFilter = (value: string) => {\n    switch (value) {\n      case 'all': dispatch(actions.setFilter(Filters.All));\n        break;\n      case 'completed': dispatch(actions.setFilter(Filters.Completed));\n        break;\n      case 'active': dispatch(actions.setFilter(Filters.Active));\n        break;\n      default: throw Error();\n    }\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleChangeFilter(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => dispatch(actions.setQuery(event.target.value))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const todo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then(response => setUser(response))\n        .finally(() => setLoading(false));\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading\n        ? <Loader />\n\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todo?.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(actions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo?.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!todo?.completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={`mailto:${user?.email}`}>{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { setTodos } from './features/todos';\nimport { getTodos } from './api';\nimport { Filters } from './types/Filters';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const todos = useAppSelector(state => state.todos);\n  const filters = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(response => {\n      dispatch(setTodos(response));\n    }).finally(() => setLoading(false));\n  }, [dispatch]);\n\n  const filteredTodos = useMemo(() => {\n    let newTodos = todos;\n    const trimedQuery = filters.query.trim();\n\n    if (trimedQuery) {\n      newTodos = newTodos.filter(todo => todo.title.includes(trimedQuery));\n    }\n\n    switch (filters.filter) {\n      case Filters.Completed: newTodos = newTodos.filter(todo => todo.completed);\n        break;\n      case Filters.Active: newTodos = newTodos.filter(todo => !todo.completed);\n        break;\n      default: return newTodos;\n    }\n\n    return newTodos;\n  }, [todos, filters]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : <TodoList todos={filteredTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}